export const category: any = {"grid": {"overview":{"name":"Overview","category":"Data Grid"},"live-data":{"name":"Live Data","category":"Data Grid"},"default":{"name":"Default Functionalities","category":"Data Grid"},"adaptive-layout":{"name":"Adaptive Layout","category":"Data Grid"},"loading-animation":{"name":"Loading Animation","category":"Data Grid"},"empty-record-template":{"name":"Empty Record Template","category":"Data Grid"},"local-binding":{"name":"Local Data","category":"Data Binding"},"remote-data":{"name":"Remote Data","category":"Data Binding"},"custom-binding":{"name":"Custom Binding","category":"Data Binding"},"column-template":{"name":"Column Template","category":"Columns"},"stacked-header":{"name":"Stacked Header","category":"Columns"},"foreign-key":{"name":"Foreign Key Column","category":"Columns"},"reorder":{"name":"Reorder","category":"Columns"},"column-resizing":{"name":"AutoFit and Resizing","category":"Columns"},"column-menu":{"name":"Column Menu","category":"Columns"},"auto-wrap":{"name":"AutoWrap Column cells","category":"Columns"},"column-chooser":{"name":"Column Chooser","category":"Columns"},"show-hide":{"name":"Show or Hide Column","category":"Columns"},"column-spanning":{"name":"Column Spanning","category":"Columns"},"row-template":{"name":"Row Template","category":"Rows"},"detail-template":{"name":"Detail Template","category":"Rows"},"row-drag-drop":{"name":"Drag and Drop","category":"Rows"},"drag-drop-within-grid":{"name":"Drag and Drop within Grid","category":"Rows"},"row-height":{"name":"Row Height","category":"Rows"},"row-spanning":{"name":"Row Spanning","category":"Rows"},"normal-edit":{"name":"Inline Editing","category":"Editing"},"dialog-edit":{"name":"Dialog Editing","category":"Editing"},"dialog-template":{"name":"Dialog Template","category":"Editing"},"batch":{"name":"Batch Editing","category":"Editing"},"command-column":{"name":"CommandColumn","category":"Editing"},"sorting":{"name":"Sorting","category":"Sorting"},"filtering":{"name":"Default Filtering","category":"Filtering"},"filter-menu":{"name":"Filter Menu","category":"Filtering"},"searching":{"name":"Search","category":"Filtering"},"paging":{"name":"Paging","category":"Paging"},"grouping":{"name":"Grouping","category":"Grouping"},"aggregate-default":{"name":"Default Aggregate","category":"Aggregates"},"aggregate-group":{"name":"Group and Caption Aggregate","category":"Aggregates"},"reactive-aggregate":{"name":"Reactive Aggregate","category":"Aggregates"},"selection":{"name":"Default Selection","category":"Selection"},"selection-api":{"name":"Selection API","category":"Selection"},"checkbox-selection":{"name":"Checkbox Selection","category":"Selection"},"hierarchy":{"name":"Hierarchy Grid","category":"Relational Binding"},"master-detail":{"name":"Master/Detail","category":"Relational Binding"},"scrolling":{"name":"Default Scrolling","category":"Scrolling"},"sticky-header":{"name":"Sticky Header","category":"Scrolling"},"frozen-rows-columns":{"name":"Frozen Rows and Columns","category":"Scrolling"},"frozen-api":{"name":"Frozen API","category":"Scrolling"},"virtualization":{"name":"Virtual Scrolling","category":"Scrolling"},"infinite-scrolling":{"name":"Infinite Scrolling","category":"Scrolling"},"lazy-load-grouping-with-paging":{"name":"Grouping with Paging","category":"Lazy Load Grouping"},"lazy-load-grouping-with-infinite-scrolling":{"name":"Grouping with Infinite Scrolling","category":"Lazy Load Grouping"},"lazy-load-grouping-with-virtual-scrolling":{"name":"Grouping with Virtual Scrolling","category":"Lazy Load Grouping"},"default-exporting":{"name":"Default Exporting","category":"Exporting"},"advanced-exporting":{"name":"Advanced Exporting","category":"Exporting"},"master-details-export":{"name":"Hierarchy Exporting","category":"Exporting"},"detail-template-exporting":{"name":"Detail Template Exporting","category":"Exporting"},"multiple-export":{"name":"Multiple Exporting","category":"Exporting"},"print":{"name":"Print","category":"Exporting"},"grid-lines":{"name":"GridLines","category":"Miscellaneous"},"context-menu":{"name":"Context Menu","category":"Miscellaneous"},"clipboard":{"name":"Clipboard","category":"Miscellaneous"},"keyboard-navigation":{"name":"Keyboard Navigation","category":"Miscellaneous"},"enable-rtl":{"name":"RTL","category":"Miscellaneous"},"defaultSample":"grid/overview"}
}

export let apiList:any={"grid/overview":[{"name":"queryCellInfo","description":"<p>Triggered every time a request is made to access cell information, element, or data.\nThis will be triggered before the cell element is appended to the Grid element.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#querycellinfo"},{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"enableVirtualization","description":"<p>If <code>enableVirtualization</code> set to true, then the Grid will render only the rows visible within the view-port\nand load subsequent rows on vertical scrolling. This helps to load large dataset in Grid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablevirtualization"},{"name":"allowFiltering","description":"<p>If <code>allowFiltering</code> set to true the filter bar will be displayed.\nIf set to false the filter bar will not be displayed.\nFilter bar allows the user to filter grid records with required criteria.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/filtering/\"><code>Filtering</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowfiltering"},{"name":"allowSorting","description":"<p>If <code>allowSorting</code> is set to true, it allows sorting of grid records when column header is clicked.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/sorting/\"><code>Sorting</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowsorting"},{"name":"allowSelection","description":"<p>If <code>allowSelection</code> is set to true, it allows selection of (highlight row) Grid records by clicking it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowselection"},{"name":"selectionSettings","description":"<p>Configures the selection settings.</p>\n","type":"SelectionSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#selectionsettings"},{"name":"height","description":"<p>Defines the scrollable height of the grid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#height"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"dataBound","description":"<p>Triggers when data source is populated in the Grid.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#databound"},{"name":"actionComplete","description":"<p>Triggers when Grid actions such as sorting, filtering, paging, grouping etc. are completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#actioncomplete"},{"name":"load","description":"<p>This event allows customization of Grid properties before rendering.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#load"}],"grid/live-data":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"enableVirtualization","description":"<p>If <code>enableVirtualization</code> set to true, then the Grid will render only the rows visible within the view-port\nand load subsequent rows on vertical scrolling. This helps to load large dataset in Grid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablevirtualization"},{"name":"enableVirtualMaskRow","description":"<p>Specifies the shimmer effect for Grid virtual and infinite scrolling.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablevirtualmaskrow"},{"name":"enableHover","description":"<p>If <code>enableHover</code> is set to true, the row hover is enabled in the Grid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablehover"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"rowHeight","description":"<p>Defines the height of Grid rows.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#rowheight"},{"name":"height","description":"<p>Defines the scrollable height of the grid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#height"},{"name":"allowSelection","description":"<p>If <code>allowSelection</code> is set to true, it allows selection of (highlight row) Grid records by clicking it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowselection"},{"name":"queryCellInfo","description":"<p>Triggered every time a request is made to access cell information, element, or data.\nThis will be triggered before the cell element is appended to the Grid element.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#querycellinfo"},{"name":"load","description":"<p>This event allows customization of Grid properties before rendering.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#load"}],"grid/default":[{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"}],"grid/adaptive-layout":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowSorting","description":"<p>If <code>allowSorting</code> is set to true, it allows sorting of grid records when column header is clicked.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/sorting/\"><code>Sorting</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowsorting"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"editSettings","description":"<p>Configures the edit settings.</p>\n","type":"EditSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#editsettings"},{"name":"allowFiltering","description":"<p>If <code>allowFiltering</code> set to true the filter bar will be displayed.\nIf set to false the filter bar will not be displayed.\nFilter bar allows the user to filter grid records with required criteria.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/filtering/\"><code>Filtering</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowfiltering"},{"name":"filterSettings","description":"<p>Configures the filter settings of the Grid.</p>\n","type":"FilterSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#filtersettings"},{"name":"rowRenderingMode","description":"<p>Defines the grid row elements rendering direction. The available directions are,</p>\n<ul>\n<li><code>Horizontal</code>: Renders the grid row elements in the horizontal direction</li>\n<li><code>Vertical</code>: Renders the grid row elements in the vertical direction</li>\n</ul>\n","type":"RowRenderingDirection","link":"//ej2.syncfusion.com/react/documentation/api/grid/#rowrenderingmode"},{"name":"toolbar","description":"<p><code>toolbar</code> defines the ToolBar items of the Grid.\nIt contains built-in and custom toolbar items.\nIf a string value is assigned to the <code>toolbar</code> option, it is considered as the template for the whole Grid ToolBar.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Grid's Toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in ToolBar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected record.</li>\n<li>Update: Updates the edited record.</li>\n<li>Delete: Deletes the selected record.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches records by the given key.</li>\n<li>Print: Prints the Grid.</li>\n<li>ExcelExport - Export the Grid to Excel(excelExport() method manually to make export.)</li>\n<li>PdfExport - Export the Grid to PDF(pdfExport() method manually to make export.)</li>\n<li>CsvExport - Export the Grid to CSV(csvExport() method manually to make export.)&lt;br&gt;&lt;br&gt;\nThe following code example implements the custom toolbar items.</li>\n</ul>\n<blockquote>\n<p>Check the <a href=\"../../grid/tool-bar/#custom-toolbar-items/\"><code>Toolbar</code></a> to customize its default items.</p>\n</blockquote>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbar"}],"grid/loading-animation":[{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowSorting","description":"<p>If <code>allowSorting</code> is set to true, it allows sorting of grid records when column header is clicked.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/sorting/\"><code>Sorting</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowsorting"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"allowFiltering","description":"<p>If <code>allowFiltering</code> set to true the filter bar will be displayed.\nIf set to false the filter bar will not be displayed.\nFilter bar allows the user to filter grid records with required criteria.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/filtering/\"><code>Filtering</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowfiltering"},{"name":"loadingIndicator","description":"<p>Configures the Loading Indicator of the Grid.</p>\n","type":"LoadingIndicatorModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#loadingindicator"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"}],"grid/empty-record-template":[{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"editSettings","description":"<p>Configures the edit settings.</p>\n","type":"EditSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#editsettings"},{"name":"toolbar","description":"<p><code>toolbar</code> defines the ToolBar items of the Grid.\nIt contains built-in and custom toolbar items.\nIf a string value is assigned to the <code>toolbar</code> option, it is considered as the template for the whole Grid ToolBar.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Grid's Toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in ToolBar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected record.</li>\n<li>Update: Updates the edited record.</li>\n<li>Delete: Deletes the selected record.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches records by the given key.</li>\n<li>Print: Prints the Grid.</li>\n<li>ExcelExport - Export the Grid to Excel(excelExport() method manually to make export.)</li>\n<li>PdfExport - Export the Grid to PDF(pdfExport() method manually to make export.)</li>\n<li>CsvExport - Export the Grid to CSV(csvExport() method manually to make export.)&lt;br&gt;&lt;br&gt;\nThe following code example implements the custom toolbar items.</li>\n</ul>\n<blockquote>\n<p>Check the <a href=\"../../grid/tool-bar/#custom-toolbar-items/\"><code>Toolbar</code></a> to customize its default items.</p>\n</blockquote>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbar"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"}],"grid/local-binding":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"}],"grid/remote-data":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"}],"grid/custom-binding":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"allowSorting","description":"<p>If <code>allowSorting</code> is set to true, it allows sorting of grid records when column header is clicked.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/sorting/\"><code>Sorting</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowsorting"},{"name":"allowGrouping","description":"<p>If <code>allowGrouping</code> set to true, then it will allow the user to dynamically group or ungroup columns.\nGrouping can be done by drag and drop columns from column header to group drop area.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/grouping/\"><code>Grouping</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowgrouping"}],"grid/column-template":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"width","description":"<p>Defines the Grid width.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#width"},{"name":"height","description":"<p>Defines the scrollable height of the grid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#height"}],"grid/stacked-header":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/foreign-key":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowSorting","description":"<p>If <code>allowSorting</code> is set to true, it allows sorting of grid records when column header is clicked.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/sorting/\"><code>Sorting</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowsorting"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"allowFiltering","description":"<p>If <code>allowFiltering</code> set to true the filter bar will be displayed.\nIf set to false the filter bar will not be displayed.\nFilter bar allows the user to filter grid records with required criteria.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/filtering/\"><code>Filtering</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowfiltering"},{"name":"filterSettings","description":"<p>Configures the filter settings of the Grid.</p>\n","type":"FilterSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#filtersettings"},{"name":"editSettings","description":"<p>Configures the edit settings.</p>\n","type":"EditSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#editsettings"}],"grid/reorder":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowReordering","description":"<p>If <code>allowReordering</code> is set to true, Grid columns can be reordered.\nReordering can be done by drag and drop of a particular column from one index to another index.</p>\n<blockquote>\n<p>If Grid is rendered with stacked headers, reordering is allowed only at the same level as the column headers.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowreordering"},{"name":"actionComplete","description":"<p>Triggers when Grid actions such as sorting, filtering, paging, grouping etc. are completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#actioncomplete"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/column-resizing":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowResizing","description":"<p>If <code>allowResizing</code> is set to true, Grid columns can be resized.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowresizing"},{"name":"height","description":"<p>Defines the scrollable height of the grid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#height"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"autoFit","description":"<p>If <code>autoFit</code> set to true, then it will auto fit the columns based on given width.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#autofit"}],"grid/column-menu":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowSorting","description":"<p>If <code>allowSorting</code> is set to true, it allows sorting of grid records when column header is clicked.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/sorting/\"><code>Sorting</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowsorting"},{"name":"allowGrouping","description":"<p>If <code>allowGrouping</code> set to true, then it will allow the user to dynamically group or ungroup columns.\nGrouping can be done by drag and drop columns from column header to group drop area.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/grouping/\"><code>Grouping</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowgrouping"},{"name":"allowFiltering","description":"<p>If <code>allowFiltering</code> set to true the filter bar will be displayed.\nIf set to false the filter bar will not be displayed.\nFilter bar allows the user to filter grid records with required criteria.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/filtering/\"><code>Filtering</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowfiltering"},{"name":"showColumnMenu","description":"<p>If <code>showColumnMenu</code> set to true, then it will enable the column menu options in each columns.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/columns/#column-menu/\"><code>Column menu</code></a> for its configuration.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#showcolumnmenu"},{"name":"filterSettings","description":"<p>Configures the filter settings of the Grid.</p>\n","type":"FilterSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#filtersettings"},{"name":"groupSettings","description":"<p>Configures the group settings.</p>\n","type":"GroupSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#groupsettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"allowSorting","description":"<p>If <code>allowSorting</code> is set to true, it allows sorting of grid records when column header is clicked.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/sorting/\"><code>Sorting</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowsorting"}],"grid/auto-wrap":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"allowTextWrap","description":"<p>If <code>allowTextWrap</code> set to true,\nthen text content will wrap to the next line when its text content exceeds the width of the Column Cells.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowtextwrap"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"}],"grid/column-chooser":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"showColumnChooser","description":"<p>If <code>showColumnChooser</code> is set to true, it allows you to dynamically show or hide columns.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/columns/#column-chooser/\"><code>ColumnChooser</code></a> for its configuration.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#showcolumnchooser"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"toolbar","description":"<p><code>toolbar</code> defines the ToolBar items of the Grid.\nIt contains built-in and custom toolbar items.\nIf a string value is assigned to the <code>toolbar</code> option, it is considered as the template for the whole Grid ToolBar.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Grid's Toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in ToolBar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected record.</li>\n<li>Update: Updates the edited record.</li>\n<li>Delete: Deletes the selected record.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches records by the given key.</li>\n<li>Print: Prints the Grid.</li>\n<li>ExcelExport - Export the Grid to Excel(excelExport() method manually to make export.)</li>\n<li>PdfExport - Export the Grid to PDF(pdfExport() method manually to make export.)</li>\n<li>CsvExport - Export the Grid to CSV(csvExport() method manually to make export.)&lt;br&gt;&lt;br&gt;\nThe following code example implements the custom toolbar items.</li>\n</ul>\n<blockquote>\n<p>Check the <a href=\"../../grid/tool-bar/#custom-toolbar-items/\"><code>Toolbar</code></a> to customize its default items.</p>\n</blockquote>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbar"}],"grid/show-hide":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/column-spanning":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowTextWrap","description":"<p>If <code>allowTextWrap</code> set to true,\nthen text content will wrap to the next line when its text content exceeds the width of the Column Cells.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowtextwrap"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"queryCellInfo","description":"<p>Triggered every time a request is made to access cell information, element, or data.\nThis will be triggered before the cell element is appended to the Grid element.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#querycellinfo"},{"name":"gridLines","description":"<p>Defines the mode of grid lines. The available modes are,</p>\n<ul>\n<li><code>Both</code>: Displays both horizontal and vertical grid lines.</li>\n<li><code>None</code>: No grid lines are displayed.</li>\n<li><code>Horizontal</code>: Displays the horizontal grid lines only.</li>\n<li><code>Vertical</code>: Displays the vertical grid lines only.</li>\n<li><code>Default</code>: Displays grid lines based on the theme.</li>\n</ul>\n","type":"GridLine","link":"//ej2.syncfusion.com/react/documentation/api/grid/#gridlines"},{"name":"width","description":"<p>Defines the Grid width.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#width"},{"name":"height","description":"<p>Defines the scrollable height of the grid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#height"}],"grid/row-template":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"rowTemplate","description":"<p>The row template that renders customized rows from the given template.\nBy default, Grid renders a table row for every data source item.</p>\n<blockquote>\n<ul>\n<li>It accepts either <a href=\"../../common/template-engine/\">template string</a> or HTML element ID.</li>\n<li>The row template must be a table row.\nCheck the <a href=\"../../grid/row/\"><code>Row Template</code></a> customization.</li>\n</ul>\n</blockquote>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/grid/#rowtemplate"}],"grid/detail-template":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"detailTemplate","description":"<p>The detail template allows you to show or hide additional information about a particular row.</p>\n<blockquote>\n<p>It accepts either the <a href=\"../../common/template-engine/\">template string</a> or the HTML element ID.</p>\n</blockquote>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/grid/#detailtemplate"},{"name":"width","description":"<p>Defines the Grid width.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#width"},{"name":"height","description":"<p>Defines the scrollable height of the grid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#height"}],"grid/row-drag-drop":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"allowRowDragAndDrop","description":"<p>If <code>allowRowDragAndDrop</code> is set to true, you can drag and drop grid rows at another grid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowrowdraganddrop"},{"name":"selectionSettings","description":"<p>Configures the selection settings.</p>\n","type":"SelectionSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#selectionsettings"},{"name":"rowDropSettings","description":"<p>Configures the row drop settings.</p>\n","type":"RowDropSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#rowdropsettings"},{"name":"width","description":"<p>Defines the Grid width.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#width"}],"grid/drag-drop-within-grid":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"allowRowDragAndDrop","description":"<p>If <code>allowRowDragAndDrop</code> is set to true, you can drag and drop grid rows at another grid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowrowdraganddrop"},{"name":"selectionSettings","description":"<p>Configures the selection settings.</p>\n","type":"SelectionSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#selectionsettings"},{"name":"width","description":"<p>Defines the Grid width.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#width"}],"grid/row-height":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"toolbar","description":"<p><code>toolbar</code> defines the ToolBar items of the Grid.\nIt contains built-in and custom toolbar items.\nIf a string value is assigned to the <code>toolbar</code> option, it is considered as the template for the whole Grid ToolBar.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Grid's Toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in ToolBar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected record.</li>\n<li>Update: Updates the edited record.</li>\n<li>Delete: Deletes the selected record.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches records by the given key.</li>\n<li>Print: Prints the Grid.</li>\n<li>ExcelExport - Export the Grid to Excel(excelExport() method manually to make export.)</li>\n<li>PdfExport - Export the Grid to PDF(pdfExport() method manually to make export.)</li>\n<li>CsvExport - Export the Grid to CSV(csvExport() method manually to make export.)&lt;br&gt;&lt;br&gt;\nThe following code example implements the custom toolbar items.</li>\n</ul>\n<blockquote>\n<p>Check the <a href=\"../../grid/tool-bar/#custom-toolbar-items/\"><code>Toolbar</code></a> to customize its default items.</p>\n</blockquote>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbar"},{"name":"height","description":"<p>Defines the scrollable height of the grid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#height"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"rowHeight","description":"<p>Defines the height of Grid rows.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#rowheight"},{"name":"toolbarClick","description":"<p>Triggers when toolbar item is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbarclick"}],"grid/row-spanning":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowTextWrap","description":"<p>If <code>allowTextWrap</code> set to true,\nthen text content will wrap to the next line when its text content exceeds the width of the Column Cells.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowtextwrap"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"queryCellInfo","description":"<p>Triggered every time a request is made to access cell information, element, or data.\nThis will be triggered before the cell element is appended to the Grid element.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#querycellinfo"},{"name":"gridLines","description":"<p>Defines the mode of grid lines. The available modes are,</p>\n<ul>\n<li><code>Both</code>: Displays both horizontal and vertical grid lines.</li>\n<li><code>None</code>: No grid lines are displayed.</li>\n<li><code>Horizontal</code>: Displays the horizontal grid lines only.</li>\n<li><code>Vertical</code>: Displays the vertical grid lines only.</li>\n<li><code>Default</code>: Displays grid lines based on the theme.</li>\n</ul>\n","type":"GridLine","link":"//ej2.syncfusion.com/react/documentation/api/grid/#gridlines"},{"name":"width","description":"<p>Defines the Grid width.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#width"},{"name":"height","description":"<p>Defines the scrollable height of the grid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#height"}],"grid/normal-edit":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"editSettings","description":"<p>Configures the edit settings.</p>\n","type":"EditSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#editsettings"},{"name":"toolbar","description":"<p><code>toolbar</code> defines the ToolBar items of the Grid.\nIt contains built-in and custom toolbar items.\nIf a string value is assigned to the <code>toolbar</code> option, it is considered as the template for the whole Grid ToolBar.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Grid's Toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in ToolBar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected record.</li>\n<li>Update: Updates the edited record.</li>\n<li>Delete: Deletes the selected record.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches records by the given key.</li>\n<li>Print: Prints the Grid.</li>\n<li>ExcelExport - Export the Grid to Excel(excelExport() method manually to make export.)</li>\n<li>PdfExport - Export the Grid to PDF(pdfExport() method manually to make export.)</li>\n<li>CsvExport - Export the Grid to CSV(csvExport() method manually to make export.)&lt;br&gt;&lt;br&gt;\nThe following code example implements the custom toolbar items.</li>\n</ul>\n<blockquote>\n<p>Check the <a href=\"../../grid/tool-bar/#custom-toolbar-items/\"><code>Toolbar</code></a> to customize its default items.</p>\n</blockquote>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbar"}],"grid/dialog-edit":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"editSettings","description":"<p>Configures the edit settings.</p>\n","type":"EditSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#editsettings"},{"name":"toolbar","description":"<p><code>toolbar</code> defines the ToolBar items of the Grid.\nIt contains built-in and custom toolbar items.\nIf a string value is assigned to the <code>toolbar</code> option, it is considered as the template for the whole Grid ToolBar.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Grid's Toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in ToolBar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected record.</li>\n<li>Update: Updates the edited record.</li>\n<li>Delete: Deletes the selected record.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches records by the given key.</li>\n<li>Print: Prints the Grid.</li>\n<li>ExcelExport - Export the Grid to Excel(excelExport() method manually to make export.)</li>\n<li>PdfExport - Export the Grid to PDF(pdfExport() method manually to make export.)</li>\n<li>CsvExport - Export the Grid to CSV(csvExport() method manually to make export.)&lt;br&gt;&lt;br&gt;\nThe following code example implements the custom toolbar items.</li>\n</ul>\n<blockquote>\n<p>Check the <a href=\"../../grid/tool-bar/#custom-toolbar-items/\"><code>Toolbar</code></a> to customize its default items.</p>\n</blockquote>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbar"}],"grid/dialog-template":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"editSettings","description":"<p>Configures the edit settings.</p>\n","type":"EditSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#editsettings"},{"name":"toolbar","description":"<p><code>toolbar</code> defines the ToolBar items of the Grid.\nIt contains built-in and custom toolbar items.\nIf a string value is assigned to the <code>toolbar</code> option, it is considered as the template for the whole Grid ToolBar.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Grid's Toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in ToolBar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected record.</li>\n<li>Update: Updates the edited record.</li>\n<li>Delete: Deletes the selected record.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches records by the given key.</li>\n<li>Print: Prints the Grid.</li>\n<li>ExcelExport - Export the Grid to Excel(excelExport() method manually to make export.)</li>\n<li>PdfExport - Export the Grid to PDF(pdfExport() method manually to make export.)</li>\n<li>CsvExport - Export the Grid to CSV(csvExport() method manually to make export.)&lt;br&gt;&lt;br&gt;\nThe following code example implements the custom toolbar items.</li>\n</ul>\n<blockquote>\n<p>Check the <a href=\"../../grid/tool-bar/#custom-toolbar-items/\"><code>Toolbar</code></a> to customize its default items.</p>\n</blockquote>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbar"}],"grid/batch":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"editSettings","description":"<p>Configures the edit settings.</p>\n","type":"EditSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#editsettings"},{"name":"toolbar","description":"<p><code>toolbar</code> defines the ToolBar items of the Grid.\nIt contains built-in and custom toolbar items.\nIf a string value is assigned to the <code>toolbar</code> option, it is considered as the template for the whole Grid ToolBar.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Grid's Toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in ToolBar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected record.</li>\n<li>Update: Updates the edited record.</li>\n<li>Delete: Deletes the selected record.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches records by the given key.</li>\n<li>Print: Prints the Grid.</li>\n<li>ExcelExport - Export the Grid to Excel(excelExport() method manually to make export.)</li>\n<li>PdfExport - Export the Grid to PDF(pdfExport() method manually to make export.)</li>\n<li>CsvExport - Export the Grid to CSV(csvExport() method manually to make export.)&lt;br&gt;&lt;br&gt;\nThe following code example implements the custom toolbar items.</li>\n</ul>\n<blockquote>\n<p>Check the <a href=\"../../grid/tool-bar/#custom-toolbar-items/\"><code>Toolbar</code></a> to customize its default items.</p>\n</blockquote>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbar"}],"grid/command-column":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"showColumnChooser","description":"<p>If <code>showColumnChooser</code> is set to true, it allows you to dynamically show or hide columns.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/columns/#column-chooser/\"><code>ColumnChooser</code></a> for its configuration.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#showcolumnchooser"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"toolbar","description":"<p><code>toolbar</code> defines the ToolBar items of the Grid.\nIt contains built-in and custom toolbar items.\nIf a string value is assigned to the <code>toolbar</code> option, it is considered as the template for the whole Grid ToolBar.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Grid's Toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in ToolBar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected record.</li>\n<li>Update: Updates the edited record.</li>\n<li>Delete: Deletes the selected record.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches records by the given key.</li>\n<li>Print: Prints the Grid.</li>\n<li>ExcelExport - Export the Grid to Excel(excelExport() method manually to make export.)</li>\n<li>PdfExport - Export the Grid to PDF(pdfExport() method manually to make export.)</li>\n<li>CsvExport - Export the Grid to CSV(csvExport() method manually to make export.)&lt;br&gt;&lt;br&gt;\nThe following code example implements the custom toolbar items.</li>\n</ul>\n<blockquote>\n<p>Check the <a href=\"../../grid/tool-bar/#custom-toolbar-items/\"><code>Toolbar</code></a> to customize its default items.</p>\n</blockquote>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbar"}],"grid/sorting":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowSelection","description":"<p>If <code>allowSelection</code> is set to true, it allows selection of (highlight row) Grid records by clicking it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowselection"},{"name":"selectionSettings","description":"<p>Configures the selection settings.</p>\n","type":"SelectionSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#selectionsettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"enableHover","description":"<p>If <code>enableHover</code> is set to true, the row hover is enabled in the Grid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablehover"}],"grid/filtering":[{"name":"allowFiltering","description":"<p>If <code>allowFiltering</code> set to true the filter bar will be displayed.\nIf set to false the filter bar will not be displayed.\nFilter bar allows the user to filter grid records with required criteria.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/filtering/\"><code>Filtering</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowfiltering"},{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/filter-menu":[{"name":"allowFiltering","description":"<p>If <code>allowFiltering</code> set to true the filter bar will be displayed.\nIf set to false the filter bar will not be displayed.\nFilter bar allows the user to filter grid records with required criteria.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/filtering/\"><code>Filtering</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowfiltering"},{"name":"filterSettings","description":"<p>Configures the filter settings of the Grid.</p>\n","type":"FilterSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#filtersettings"},{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/searching":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"toolbar","description":"<p><code>toolbar</code> defines the ToolBar items of the Grid.\nIt contains built-in and custom toolbar items.\nIf a string value is assigned to the <code>toolbar</code> option, it is considered as the template for the whole Grid ToolBar.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Grid's Toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in ToolBar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected record.</li>\n<li>Update: Updates the edited record.</li>\n<li>Delete: Deletes the selected record.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches records by the given key.</li>\n<li>Print: Prints the Grid.</li>\n<li>ExcelExport - Export the Grid to Excel(excelExport() method manually to make export.)</li>\n<li>PdfExport - Export the Grid to PDF(pdfExport() method manually to make export.)</li>\n<li>CsvExport - Export the Grid to CSV(csvExport() method manually to make export.)&lt;br&gt;&lt;br&gt;\nThe following code example implements the custom toolbar items.</li>\n</ul>\n<blockquote>\n<p>Check the <a href=\"../../grid/tool-bar/#custom-toolbar-items/\"><code>Toolbar</code></a> to customize its default items.</p>\n</blockquote>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbar"}],"grid/paging":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/grouping":[{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"allowSorting","description":"<p>If <code>allowSorting</code> is set to true, it allows sorting of grid records when column header is clicked.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/sorting/\"><code>Sorting</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowsorting"},{"name":"groupSettings","description":"<p>Configures the group settings.</p>\n","type":"GroupSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#groupsettings"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"allowGrouping","description":"<p>If <code>allowGrouping</code> set to true, then it will allow the user to dynamically group or ungroup columns.\nGrouping can be done by drag and drop columns from column header to group drop area.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/grouping/\"><code>Grouping</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowgrouping"}],"grid/aggregate-default":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/aggregate-group":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/reactive-aggregate":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/selection":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowSelection","description":"<p>If <code>allowSelection</code> is set to true, it allows selection of (highlight row) Grid records by clicking it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowselection"},{"name":"selectionSettings","description":"<p>Configures the selection settings.</p>\n","type":"SelectionSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#selectionsettings"},{"name":"enableHover","description":"<p>If <code>enableHover</code> is set to true, the row hover is enabled in the Grid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablehover"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/selection-api":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"allowSelection","description":"<p>If <code>allowSelection</code> is set to true, it allows selection of (highlight row) Grid records by clicking it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowselection"},{"name":"selectionSettings","description":"<p>Configures the selection settings.</p>\n","type":"SelectionSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#selectionsettings"},{"name":"enableHover","description":"<p>If <code>enableHover</code> is set to true, the row hover is enabled in the Grid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablehover"}],"grid/checkbox-selection":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"allowSelection","description":"<p>If <code>allowSelection</code> is set to true, it allows selection of (highlight row) Grid records by clicking it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowselection"},{"name":"selectionSettings","description":"<p>Configures the selection settings.</p>\n","type":"SelectionSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#selectionsettings"},{"name":"enableHover","description":"<p>If <code>enableHover</code> is set to true, the row hover is enabled in the Grid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablehover"}],"grid/hierarchy":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowSorting","description":"<p>If <code>allowSorting</code> is set to true, it allows sorting of grid records when column header is clicked.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/sorting/\"><code>Sorting</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowsorting"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"detailDataBound","description":"<p>Triggers after detail row expands.</p>\n<blockquote>\n<p>This event triggers at initial expand.</p>\n</blockquote>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#detaildatabound"},{"name":"dataBound","description":"<p>Triggers when data source is populated in the Grid.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#databound"},{"name":"created","description":"<p>Triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#created"},{"name":"childGrid","description":"<p>Defines Grid options to render child Grid.\nIt requires the <a href=\"./#querystring\"><code>queryString</code></a> for parent\nand child relationship.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/hierarchy-grid/\"><code>Child Grid</code></a> for its configuration.</p>\n</blockquote>\n","type":"GridModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#childgrid"}],"grid/master-detail":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowSelection","description":"<p>If <code>allowSelection</code> is set to true, it allows selection of (highlight row) Grid records by clicking it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowselection"},{"name":"rowSelected","description":"<p>Triggers after a row is selected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#rowselected"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/scrolling":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"height","description":"<p>Defines the scrollable height of the grid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#height"},{"name":"width","description":"<p>Defines the Grid width.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#width"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/sticky-header":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"enableStickyHeader","description":"<p>If 'enableStickyHeader' set to true, then the user can able to make the column headers visible when the document is scrolled.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablestickyheader"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/frozen-rows-columns":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowSelection","description":"<p>If <code>allowSelection</code> is set to true, it allows selection of (highlight row) Grid records by clicking it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowselection"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"frozenColumns","description":"<p>Gets or sets the number of frozen columns.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#frozencolumns"},{"name":"frozenRows","description":"<p>Gets or sets the number of frozen rows.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#frozenrows"},{"name":"height","description":"<p>Defines the scrollable height of the grid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#height"}],"grid/frozen-api":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowSelection","description":"<p>If <code>allowSelection</code> is set to true, it allows selection of (highlight row) Grid records by clicking it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowselection"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"frozenColumns","description":"<p>Gets or sets the number of frozen columns.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#frozencolumns"},{"name":"frozenRows","description":"<p>Gets or sets the number of frozen rows.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#frozenrows"},{"name":"height","description":"<p>Defines the scrollable height of the grid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#height"}],"grid/virtualization":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"enableVirtualization","description":"<p>If <code>enableVirtualization</code> set to true, then the Grid will render only the rows visible within the view-port\nand load subsequent rows on vertical scrolling. This helps to load large dataset in Grid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablevirtualization"},{"name":"enableColumnVirtualization","description":"<p>If <code>enableColumnVirtualization</code> set to true, then the Grid will render only the columns visible within the view-port\nand load subsequent columns on horizontal scrolling. This helps to load large dataset of columns in Grid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablecolumnvirtualization"},{"name":"dataBound","description":"<p>Triggers when data source is populated in the Grid.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#databound"},{"name":"height","description":"<p>Defines the scrollable height of the grid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#height"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/infinite-scrolling":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"enableInfiniteScrolling","description":"<p>If <code>enableInfiniteScrolling</code> set to true, then the data will be loaded in Grid when the scrollbar reaches the end.\nThis helps to load large dataset in Grid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enableinfinitescrolling"},{"name":"height","description":"<p>Defines the scrollable height of the grid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#height"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/lazy-load-grouping-with-paging":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"groupSettings","description":"<p>Configures the group settings.</p>\n","type":"GroupSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#groupsettings"},{"name":"allowGrouping","description":"<p>If <code>allowGrouping</code> set to true, then it will allow the user to dynamically group or ungroup columns.\nGrouping can be done by drag and drop columns from column header to group drop area.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/grouping/\"><code>Grouping</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowgrouping"},{"name":"height","description":"<p>Defines the scrollable height of the grid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#height"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/lazy-load-grouping-with-infinite-scrolling":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"enableInfiniteScrolling","description":"<p>If <code>enableInfiniteScrolling</code> set to true, then the data will be loaded in Grid when the scrollbar reaches the end.\nThis helps to load large dataset in Grid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enableinfinitescrolling"},{"name":"height","description":"<p>Defines the scrollable height of the grid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#height"},{"name":"allowGrouping","description":"<p>If <code>allowGrouping</code> set to true, then it will allow the user to dynamically group or ungroup columns.\nGrouping can be done by drag and drop columns from column header to group drop area.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/grouping/\"><code>Grouping</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowgrouping"},{"name":"groupSettings","description":"<p>Configures the group settings.</p>\n","type":"GroupSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#groupsettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/lazy-load-grouping-with-virtual-scrolling":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"enableVirtualization","description":"<p>If <code>enableVirtualization</code> set to true, then the Grid will render only the rows visible within the view-port\nand load subsequent rows on vertical scrolling. This helps to load large dataset in Grid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablevirtualization"},{"name":"height","description":"<p>Defines the scrollable height of the grid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#height"},{"name":"allowGrouping","description":"<p>If <code>allowGrouping</code> set to true, then it will allow the user to dynamically group or ungroup columns.\nGrouping can be done by drag and drop columns from column header to group drop area.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/grouping/\"><code>Grouping</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowgrouping"},{"name":"groupSettings","description":"<p>Configures the group settings.</p>\n","type":"GroupSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#groupsettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/default-exporting":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowExcelExport","description":"<p>If <code>allowExcelExport</code> set to true, then it will allow the user to export grid to Excel file.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/excel-exporting/\"><code>ExcelExport</code></a> to configure exporting document.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowexcelexport"},{"name":"allowPdfExport","description":"<p>If <code>allowPdfExport</code> set to true, then it will allow the user to export grid to Pdf file.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/pdf-export/\"><code>Pdfexport</code></a> to configure the exporting document.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpdfexport"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"toolbar","description":"<p><code>toolbar</code> defines the ToolBar items of the Grid.\nIt contains built-in and custom toolbar items.\nIf a string value is assigned to the <code>toolbar</code> option, it is considered as the template for the whole Grid ToolBar.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Grid's Toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in ToolBar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected record.</li>\n<li>Update: Updates the edited record.</li>\n<li>Delete: Deletes the selected record.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches records by the given key.</li>\n<li>Print: Prints the Grid.</li>\n<li>ExcelExport - Export the Grid to Excel(excelExport() method manually to make export.)</li>\n<li>PdfExport - Export the Grid to PDF(pdfExport() method manually to make export.)</li>\n<li>CsvExport - Export the Grid to CSV(csvExport() method manually to make export.)&lt;br&gt;&lt;br&gt;\nThe following code example implements the custom toolbar items.</li>\n</ul>\n<blockquote>\n<p>Check the <a href=\"../../grid/tool-bar/#custom-toolbar-items/\"><code>Toolbar</code></a> to customize its default items.</p>\n</blockquote>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbar"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"groupSettings","description":"<p>Configures the group settings.</p>\n","type":"GroupSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#groupsettings"},{"name":"allowGrouping","description":"<p>If <code>allowGrouping</code> set to true, then it will allow the user to dynamically group or ungroup columns.\nGrouping can be done by drag and drop columns from column header to group drop area.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/grouping/\"><code>Grouping</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowgrouping"}],"grid/advanced-exporting":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowExcelExport","description":"<p>If <code>allowExcelExport</code> set to true, then it will allow the user to export grid to Excel file.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/excel-exporting/\"><code>ExcelExport</code></a> to configure exporting document.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowexcelexport"},{"name":"allowPdfExport","description":"<p>If <code>allowPdfExport</code> set to true, then it will allow the user to export grid to Pdf file.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/pdf-export/\"><code>Pdfexport</code></a> to configure the exporting document.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpdfexport"},{"name":"toolbar","description":"<p><code>toolbar</code> defines the ToolBar items of the Grid.\nIt contains built-in and custom toolbar items.\nIf a string value is assigned to the <code>toolbar</code> option, it is considered as the template for the whole Grid ToolBar.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Grid's Toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in ToolBar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected record.</li>\n<li>Update: Updates the edited record.</li>\n<li>Delete: Deletes the selected record.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches records by the given key.</li>\n<li>Print: Prints the Grid.</li>\n<li>ExcelExport - Export the Grid to Excel(excelExport() method manually to make export.)</li>\n<li>PdfExport - Export the Grid to PDF(pdfExport() method manually to make export.)</li>\n<li>CsvExport - Export the Grid to CSV(csvExport() method manually to make export.)&lt;br&gt;&lt;br&gt;\nThe following code example implements the custom toolbar items.</li>\n</ul>\n<blockquote>\n<p>Check the <a href=\"../../grid/tool-bar/#custom-toolbar-items/\"><code>Toolbar</code></a> to customize its default items.</p>\n</blockquote>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbar"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/master-details-export":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"toolbar","description":"<p><code>toolbar</code> defines the ToolBar items of the Grid.\nIt contains built-in and custom toolbar items.\nIf a string value is assigned to the <code>toolbar</code> option, it is considered as the template for the whole Grid ToolBar.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Grid's Toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in ToolBar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected record.</li>\n<li>Update: Updates the edited record.</li>\n<li>Delete: Deletes the selected record.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches records by the given key.</li>\n<li>Print: Prints the Grid.</li>\n<li>ExcelExport - Export the Grid to Excel(excelExport() method manually to make export.)</li>\n<li>PdfExport - Export the Grid to PDF(pdfExport() method manually to make export.)</li>\n<li>CsvExport - Export the Grid to CSV(csvExport() method manually to make export.)&lt;br&gt;&lt;br&gt;\nThe following code example implements the custom toolbar items.</li>\n</ul>\n<blockquote>\n<p>Check the <a href=\"../../grid/tool-bar/#custom-toolbar-items/\"><code>Toolbar</code></a> to customize its default items.</p>\n</blockquote>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbar"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"childGrid","description":"<p>Defines Grid options to render child Grid.\nIt requires the <a href=\"./#querystring\"><code>queryString</code></a> for parent\nand child relationship.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/hierarchy-grid/\"><code>Child Grid</code></a> for its configuration.</p>\n</blockquote>\n","type":"GridModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#childgrid"}],"grid/detail-template-exporting":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"detailTemplate","description":"<p>The detail template allows you to show or hide additional information about a particular row.</p>\n<blockquote>\n<p>It accepts either the <a href=\"../../common/template-engine/\">template string</a> or the HTML element ID.</p>\n</blockquote>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/grid/#detailtemplate"},{"name":"height","description":"<p>Defines the scrollable height of the grid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#height"},{"name":"width","description":"<p>Defines the Grid width.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#width"},{"name":"allowExcelExport","description":"<p>If <code>allowExcelExport</code> set to true, then it will allow the user to export grid to Excel file.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/excel-exporting/\"><code>ExcelExport</code></a> to configure exporting document.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowexcelexport"},{"name":"allowPdfExport","description":"<p>If <code>allowPdfExport</code> set to true, then it will allow the user to export grid to Pdf file.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/pdf-export/\"><code>Pdfexport</code></a> to configure the exporting document.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpdfexport"},{"name":"toolbar","description":"<p><code>toolbar</code> defines the ToolBar items of the Grid.\nIt contains built-in and custom toolbar items.\nIf a string value is assigned to the <code>toolbar</code> option, it is considered as the template for the whole Grid ToolBar.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Grid's Toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in ToolBar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected record.</li>\n<li>Update: Updates the edited record.</li>\n<li>Delete: Deletes the selected record.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches records by the given key.</li>\n<li>Print: Prints the Grid.</li>\n<li>ExcelExport - Export the Grid to Excel(excelExport() method manually to make export.)</li>\n<li>PdfExport - Export the Grid to PDF(pdfExport() method manually to make export.)</li>\n<li>CsvExport - Export the Grid to CSV(csvExport() method manually to make export.)&lt;br&gt;&lt;br&gt;\nThe following code example implements the custom toolbar items.</li>\n</ul>\n<blockquote>\n<p>Check the <a href=\"../../grid/tool-bar/#custom-toolbar-items/\"><code>Toolbar</code></a> to customize its default items.</p>\n</blockquote>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbar"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/multiple-export":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"toolbar","description":"<p><code>toolbar</code> defines the ToolBar items of the Grid.\nIt contains built-in and custom toolbar items.\nIf a string value is assigned to the <code>toolbar</code> option, it is considered as the template for the whole Grid ToolBar.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Grid's Toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in ToolBar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected record.</li>\n<li>Update: Updates the edited record.</li>\n<li>Delete: Deletes the selected record.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches records by the given key.</li>\n<li>Print: Prints the Grid.</li>\n<li>ExcelExport - Export the Grid to Excel(excelExport() method manually to make export.)</li>\n<li>PdfExport - Export the Grid to PDF(pdfExport() method manually to make export.)</li>\n<li>CsvExport - Export the Grid to CSV(csvExport() method manually to make export.)&lt;br&gt;&lt;br&gt;\nThe following code example implements the custom toolbar items.</li>\n</ul>\n<blockquote>\n<p>Check the <a href=\"../../grid/tool-bar/#custom-toolbar-items/\"><code>Toolbar</code></a> to customize its default items.</p>\n</blockquote>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbar"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"allowExcelExport","description":"<p>If <code>allowExcelExport</code> set to true, then it will allow the user to export grid to Excel file.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/excel-exporting/\"><code>ExcelExport</code></a> to configure exporting document.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowexcelexport"},{"name":"allowPdfExport","description":"<p>If <code>allowPdfExport</code> set to true, then it will allow the user to export grid to Pdf file.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/pdf-export/\"><code>Pdfexport</code></a> to configure the exporting document.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpdfexport"}],"grid/print":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"toolbar","description":"<p><code>toolbar</code> defines the ToolBar items of the Grid.\nIt contains built-in and custom toolbar items.\nIf a string value is assigned to the <code>toolbar</code> option, it is considered as the template for the whole Grid ToolBar.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Grid's Toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in ToolBar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected record.</li>\n<li>Update: Updates the edited record.</li>\n<li>Delete: Deletes the selected record.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches records by the given key.</li>\n<li>Print: Prints the Grid.</li>\n<li>ExcelExport - Export the Grid to Excel(excelExport() method manually to make export.)</li>\n<li>PdfExport - Export the Grid to PDF(pdfExport() method manually to make export.)</li>\n<li>CsvExport - Export the Grid to CSV(csvExport() method manually to make export.)&lt;br&gt;&lt;br&gt;\nThe following code example implements the custom toolbar items.</li>\n</ul>\n<blockquote>\n<p>Check the <a href=\"../../grid/tool-bar/#custom-toolbar-items/\"><code>Toolbar</code></a> to customize its default items.</p>\n</blockquote>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbar"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/grid-lines":[{"name":"gridLines","description":"<p>Defines the mode of grid lines. The available modes are,</p>\n<ul>\n<li><code>Both</code>: Displays both horizontal and vertical grid lines.</li>\n<li><code>None</code>: No grid lines are displayed.</li>\n<li><code>Horizontal</code>: Displays the horizontal grid lines only.</li>\n<li><code>Vertical</code>: Displays the vertical grid lines only.</li>\n<li><code>Default</code>: Displays grid lines based on the theme.</li>\n</ul>\n","type":"GridLine","link":"//ej2.syncfusion.com/react/documentation/api/grid/#gridlines"},{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"}],"grid/context-menu":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowSorting","description":"<p>If <code>allowSorting</code> is set to true, it allows sorting of grid records when column header is clicked.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/sorting/\"><code>Sorting</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowsorting"},{"name":"allowGrouping","description":"<p>If <code>allowGrouping</code> set to true, then it will allow the user to dynamically group or ungroup columns.\nGrouping can be done by drag and drop columns from column header to group drop area.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/grouping/\"><code>Grouping</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowgrouping"},{"name":"allowPdfExport","description":"<p>If <code>allowPdfExport</code> set to true, then it will allow the user to export grid to Pdf file.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/pdf-export/\"><code>Pdfexport</code></a> to configure the exporting document.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpdfexport"},{"name":"allowExcelExport","description":"<p>If <code>allowExcelExport</code> set to true, then it will allow the user to export grid to Excel file.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/excel-exporting/\"><code>ExcelExport</code></a> to configure exporting document.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowexcelexport"},{"name":"editSettings","description":"<p>Configures the edit settings.</p>\n","type":"EditSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#editsettings"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"contextMenuItems","description":"<p><code>contextMenuItems</code> defines both built-in and custom context menu items.\n&lt;br&gt;&lt;br&gt;\nThe available built-in items are,</p>\n<ul>\n<li><code>AutoFitAll</code> - Auto fit the size of all columns.</li>\n<li><code>AutoFit</code> - Auto fit the current column.</li>\n<li><code>Group</code> - Group by current column.</li>\n<li><code>Ungroup</code> - Ungroup by current column.</li>\n<li><code>Edit</code> - Edit the current record.</li>\n<li><code>Delete</code> - Delete the current record.</li>\n<li><code>Save</code> - Save the edited record.</li>\n<li><code>Cancel</code> - Cancel the edited state.</li>\n<li><code>Copy</code> - Copy the selected records.</li>\n<li><code>PdfExport</code> - Export the grid as Pdf format.</li>\n<li><code>ExcelExport</code> - Export the grid as Excel format.</li>\n<li><code>CsvExport</code> - Export the grid as CSV format.</li>\n<li><code>SortAscending</code> - Sort the current column in ascending order.</li>\n<li><code>SortDescending</code> - Sort the current column in descending order.</li>\n<li><code>FirstPage</code> - Go to the first page.</li>\n<li><code>PrevPage</code> - Go to the previous page.</li>\n<li><code>LastPage</code> - Go to the last page.</li>\n<li><code>NextPage</code> - Go to the next page.</li>\n</ul>\n","type":"ContextMenuItem[]|ContextMenuItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#contextmenuitems"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/clipboard":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"toolbar","description":"<p><code>toolbar</code> defines the ToolBar items of the Grid.\nIt contains built-in and custom toolbar items.\nIf a string value is assigned to the <code>toolbar</code> option, it is considered as the template for the whole Grid ToolBar.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Grid's Toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in ToolBar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected record.</li>\n<li>Update: Updates the edited record.</li>\n<li>Delete: Deletes the selected record.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches records by the given key.</li>\n<li>Print: Prints the Grid.</li>\n<li>ExcelExport - Export the Grid to Excel(excelExport() method manually to make export.)</li>\n<li>PdfExport - Export the Grid to PDF(pdfExport() method manually to make export.)</li>\n<li>CsvExport - Export the Grid to CSV(csvExport() method manually to make export.)&lt;br&gt;&lt;br&gt;\nThe following code example implements the custom toolbar items.</li>\n</ul>\n<blockquote>\n<p>Check the <a href=\"../../grid/tool-bar/#custom-toolbar-items/\"><code>Toolbar</code></a> to customize its default items.</p>\n</blockquote>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbar"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"allowSelection","description":"<p>If <code>allowSelection</code> is set to true, it allows selection of (highlight row) Grid records by clicking it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowselection"},{"name":"selectionSettings","description":"<p>Configures the selection settings.</p>\n","type":"SelectionSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#selectionsettings"},{"name":"toolbarClick","description":"<p>Triggers when toolbar item is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbarclick"}],"grid/keyboard-navigation":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowFiltering","description":"<p>If <code>allowFiltering</code> set to true the filter bar will be displayed.\nIf set to false the filter bar will not be displayed.\nFilter bar allows the user to filter grid records with required criteria.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/filtering/\"><code>Filtering</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowfiltering"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"allowGrouping","description":"<p>If <code>allowGrouping</code> set to true, then it will allow the user to dynamically group or ungroup columns.\nGrouping can be done by drag and drop columns from column header to group drop area.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/grouping/\"><code>Grouping</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowgrouping"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"allowSorting","description":"<p>If <code>allowSorting</code> is set to true, it allows sorting of grid records when column header is clicked.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/sorting/\"><code>Sorting</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowsorting"},{"name":"toolbar","description":"<p><code>toolbar</code> defines the ToolBar items of the Grid.\nIt contains built-in and custom toolbar items.\nIf a string value is assigned to the <code>toolbar</code> option, it is considered as the template for the whole Grid ToolBar.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Grid's Toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in ToolBar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected record.</li>\n<li>Update: Updates the edited record.</li>\n<li>Delete: Deletes the selected record.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches records by the given key.</li>\n<li>Print: Prints the Grid.</li>\n<li>ExcelExport - Export the Grid to Excel(excelExport() method manually to make export.)</li>\n<li>PdfExport - Export the Grid to PDF(pdfExport() method manually to make export.)</li>\n<li>CsvExport - Export the Grid to CSV(csvExport() method manually to make export.)&lt;br&gt;&lt;br&gt;\nThe following code example implements the custom toolbar items.</li>\n</ul>\n<blockquote>\n<p>Check the <a href=\"../../grid/tool-bar/#custom-toolbar-items/\"><code>Toolbar</code></a> to customize its default items.</p>\n</blockquote>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbar"},{"name":"filterSettings","description":"<p>Configures the filter settings of the Grid.</p>\n","type":"FilterSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#filtersettings"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"editSettings","description":"<p>Configures the edit settings.</p>\n","type":"EditSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#editsettings"}],"grid/enable-rtl":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowSorting","description":"<p>If <code>allowSorting</code> is set to true, it allows sorting of grid records when column header is clicked.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/sorting/\"><code>Sorting</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowsorting"},{"name":"allowGrouping","description":"<p>If <code>allowGrouping</code> set to true, then it will allow the user to dynamically group or ungroup columns.\nGrouping can be done by drag and drop columns from column header to group drop area.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/grouping/\"><code>Grouping</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowgrouping"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablertl"},{"name":"allowReordering","description":"<p>If <code>allowReordering</code> is set to true, Grid columns can be reordered.\nReordering can be done by drag and drop of a particular column from one index to another index.</p>\n<blockquote>\n<p>If Grid is rendered with stacked headers, reordering is allowed only at the same level as the column headers.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowreordering"},{"name":"editSettings","description":"<p>Configures the edit settings.</p>\n","type":"EditSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#editsettings"},{"name":"allowFiltering","description":"<p>If <code>allowFiltering</code> set to true the filter bar will be displayed.\nIf set to false the filter bar will not be displayed.\nFilter bar allows the user to filter grid records with required criteria.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/filtering/\"><code>Filtering</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowfiltering"},{"name":"filterSettings","description":"<p>Configures the filter settings of the Grid.</p>\n","type":"FilterSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#filtersettings"}]}